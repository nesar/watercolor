# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/07_paint.ipynb.

# %% auto 0
__all__ = ['photometry_from_catalog']

# %% ../nbs/07_paint.ipynb 4
import watercolor
from .load_sim_stellar_catalog import load_hacc_galaxy_data, GALS_FILE
from .calculate_csp import calc_fluxes_for_galaxy
from .load_sps_library import LIBRARY_FLUX_FILE, LIBRARY_WAVE_FILE, LIBRARY_AGE_FILE, LIBRARY_METAL_FILE
from .dust_attenuation import spectrum_dusted, log_total_stellar_metal, log_total_stellar_mass
from .cosmic_distance_effects import combine_redshift_and_dimming_effect
from .filter_convolution import load_survey_pickle, photometry_from_spectra

# %% ../nbs/07_paint.ipynb 5
import numpy as np

# %% ../nbs/07_paint.ipynb 6
def photometry_from_catalog(galaxy_star_catalog_file:str=GALS_FILE, # Input galaxy catalog
                            galaxy_redshift:np.float32=0.001, # Galaxy redshift
                           )->tuple:# [SED, wavelengths, broadband magnitudes from lsst, cosmos, spherex]
    
    # load catalog from HACC
    fof_halo_tag, if_satellite, galaxy_tags, stellar_idx, metal_hydro, mass, age_hydro, x, y, z , vx, vy, vz = load_hacc_galaxy_data(galaxy_star_catalog_file)
    num_galaxies_in_catalog = np.unique(galaxy_tags).shape[0]
    print('Number of galaxies: %d'%num_galaxies_in_catalog)

    
    final_sed_uJy = np.zeros(shape=(num_galaxies_in_catalog, 1963)) ## SED resolution is 1963
    final_wave_um = np.zeros(shape=(num_galaxies_in_catalog, 1963)) ## SED resolution is 1963
    lsst_mags = np.zeros(shape=(num_galaxies_in_catalog, 6)) ## 6 LSST bands
    spherex_mags = np.zeros(shape=(num_galaxies_in_catalog, 197)) ## 197 SPHEREx channels
    cosmos_mags = np.zeros(shape=(num_galaxies_in_catalog, 31)) ## 31 COSMOS bands
    
    for galaxy_number in range(np.unique(galaxy_tags).shape[0]):
        # Go through all the galaxies in the catalog (the unique galaxy tags)
    
        unique_galaxy_tag = np.unique(galaxy_tags)[galaxy_number]

        mstar_i = mass[galaxy_tags == unique_galaxy_tag]
        metal_i = metal_hydro[galaxy_tags == unique_galaxy_tag]

        logZ = log_total_stellar_metal(metal_i, mstar_i)
        logmstar = log_total_stellar_mass(mstar_i)
        
        # We now calculate the SED. This is the rest-frame SED is due to spectral emission alone, and without dust attenuation.
        spec_wave_ssp, spec_flux_ssp, spec_csp, flux_proxy, gal_stellar_mass = calc_fluxes_for_galaxy(galaxy_star_catalog_file,
                                                                                                                               unique_galaxy_tag,
                                                                                                                               LIBRARY_FLUX_FILE,
                                                                                                                               LIBRARY_WAVE_FILE,
                                                                                                                               LIBRARY_AGE_FILE,
                                                                                                                               LIBRARY_METAL_FILE)
        # Dust attenuation
        spec_wave_csp_dusted = spectrum_dusted(spec_csp, spec_wave_ssp, logmstar, logZ, galaxy_redshift)
        
        # Cosmic redshifting and dimming
        redsh_wave, redsh_spec = combine_redshift_and_dimming_effect(wave=spec_wave_ssp, 
                                                             spec=spec_wave_csp_dusted, 
                                                             galaxy_redshift=galaxy_redshift)
        
        sed_um_wave = redsh_wave/1e4
        sed_mJy_flux = redsh_spec*1e3
        
        # Filter convolution - LSST
        central_wavelengths, bandpass_wavs, bandpass_vals, bandpass_names = load_survey_pickle('LSST')
        
        _, appmag_ext_lsst, _ = photometry_from_spectra(central_wavelengths, 
                                                        sed_um_wave, 
                                                        sed_mJy_flux, 
                                                        bandpass_wavs, 
                                                        bandpass_vals, 
                                                        bandpass_names,
                                                        interp_kind='linear',
                                                        plot=False,
                                                        clip_bandpass=True)
        
        # Filter convolution - SPHEREx
        central_wavelengths, bandpass_wavs, bandpass_vals, bandpass_names = load_survey_pickle('SPHEREx')
        
        _, appmag_ext_spherex, _ = photometry_from_spectra(central_wavelengths, 
                                                           sed_um_wave, 
                                                           sed_mJy_flux, 
                                                           bandpass_wavs, 
                                                           bandpass_vals, 
                                                           bandpass_names,
                                                           interp_kind='linear',
                                                           plot=False,
                                                           clip_bandpass=True)
        
        # Filter convolution - COSMOS
        central_wavelengths, bandpass_wavs, bandpass_vals, bandpass_names = load_survey_pickle('COSMOS')
        
        _, appmag_ext_cosmos, _ = photometry_from_spectra(central_wavelengths, 
                                                          sed_um_wave, 
                                                          sed_mJy_flux, 
                                                          bandpass_wavs, 
                                                          bandpass_vals, 
                                                          bandpass_names,
                                                          interp_kind='linear',
                                                          plot=False,
                                                          clip_bandpass=True)


        # Appending the relevant quantities
        final_sed_uJy[galaxy_number] = sed_mJy_flux
        final_wave_um[galaxy_number] = sed_um_wave
        lsst_mags[galaxy_number] = appmag_ext_lsst
        spherex_mags[galaxy_number] = appmag_ext_spherex
        cosmos_mags[galaxy_number] = appmag_ext_cosmos
    
    return final_sed_uJy, final_wave_um, lsst_mags, spherex_mags, cosmos_mags
